<!-- هذا الملف الجزئي (Partial) يعرض تفاصيل المحادثة والرسائل -->
<!-- تعريف متغيرات المستخدم عالمياً -->
<script>
  // تعريف معلومات المستخدم كمتغيرات عامة
  window.currentUserId = "<%= typeof user !== 'undefined' && user ? user._id : 'system' %>";
  window.currentUsername = "<%= typeof user !== 'undefined' && user ? user.username : 'مستخدم النظام' %>";
</script>

<!-- استدعاء ملف المساعدة للمحادثات -->
<script src="/js/conversation-utils.js"></script>

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
      <h5 class="mb-0">
        <i class="fas fa-comments me-1"></i>
        المحادثة مع <%= conversation.customerName || conversation.phoneNumber %>
      </h5>
      <span class="badge bg-primary"><%= messages.length %> رسالة</span>
    </div>
    <div class="card-body p-0" id="messageContainer" style="max-height: 500px; overflow-y: auto;">
      <% if (messages && messages.length) { %>
        <% messages.forEach((msg, index) => { %>
          <div class="message <%= msg.direction %>"
               data-message-id="<%= msg._id %>"
               data-status="<%= msg.status %>"
               <% if (msg.externalMessageId) { %> data-external-id="<%= msg.externalMessageId %>" <% } %>>
            
            <% if (msg.replyToMessageId) { %>
              <!-- عرض الرسالة المقتبسة في حالة وجود رد -->
              <div class="replied-message">
                <% 
                  // البحث عن الرسالة التي تم الرد عليها باستخدام المعرف الخارجي أو الداخلي
                  const repliedMsg = messages.find(m => 
                    (m.externalMessageId && m.externalMessageId === msg.replyToMessageId) || 
                    (m._id && m._id.toString() === msg.replyToMessageId)
                  ); 
                %>
                <% if (repliedMsg) { %>
                  <div class="replied-content">
                    <i class="fas fa-reply"></i>
                    <span><%= repliedMsg.content.length > 50 ? repliedMsg.content.substring(0, 50) + '...' : repliedMsg.content %></span>
                  </div>
                <% } else { %>
                  <div class="replied-content text-muted">
                    <i class="fas fa-reply"></i>
                    <span>رد على رسالة غير موجودة</span>
                    <small class="text-muted d-block">(المعرف: <%= msg.replyToMessageId.substring(0, 10) %>...)</small>
                  </div>
                <% } %>
              </div>
            <% } %>
            
            <div class="message-bubble <%= msg.direction === 'incoming' ? 'incoming-bubble' : 'outgoing-bubble' %>">
              <% if (msg.mediaType) { %>
              <!-- عرض الوسائط حسب النوع -->
              <% 
                // البحث عن الوسائط المرتبطة بالرسالة
                let mediaUrl = '/whatsapp/media/message-content/' + msg._id;
              %>
              <% if (msg.mediaType === 'image') { %>
                <div class="media-container">
                  <img src="<%= mediaUrl %>" class="media-image" alt="صورة" onclick="window.openMediaPreview(this.src, 'image')">
                </div>
              <% } else if (msg.mediaType === 'video') { %>
                <div class="media-container">
                  <video controls class="media-video">
                    <source src="<%= mediaUrl %>" type="video/mp4">
                    المتصفح لا يدعم عرض الفيديو
                  </video>
                </div>
              <% } else if (msg.mediaType === 'audio') { %>
                <div class="media-container">
                  <audio controls class="media-audio">
                    <source src="<%= mediaUrl %>" type="audio/ogg">
                    المتصفح لا يدعم تشغيل الملفات الصوتية
                  </audio>
                </div>
              <% } else if (msg.mediaType === 'document') { %>
                <div class="media-container document-container">
                  <a href="<%= mediaUrl %>" target="_blank" class="document-link">
                    <i class="fas fa-file-alt"></i>
                    <span><%= msg.content || 'مستند' %></span>
                  </a>
                </div>
              <% } else if (msg.mediaType === 'sticker') { %>
                <div class="media-container">
                  <img src="<%= mediaUrl %>" class="media-sticker" alt="ملصق">
                </div>
              <% } else if (msg.mediaType === 'location') { %>
                <div class="media-container location-container">
                  <div class="location-info">
                    <i class="fas fa-map-marker-alt"></i>
                    <span><%= msg.content || 'موقع' %></span>
                  </div>
                  <a href="https://www.google.com/maps/search/?api=1&query=<%= msg.content %>" target="_blank" class="btn btn-sm btn-outline-primary mt-2">
                    <i class="fas fa-external-link-alt"></i> فتح في خرائط جوجل
                  </a>
                </div>
              <% } %>
            <% } %>
              <%= msg.content %>
              <div class="message-time">
                <%= new Date(msg.timestamp).toLocaleString('ar-LY') %>
                
                <% if (msg.direction === 'outgoing') { %>
                  <span class="message-status">
                    <% if (msg.status === 'sending') { %>
                      <i class="fas fa-clock text-secondary" title="جاري الإرسال..."></i>
                    <% } else if (msg.status === 'sent') { %>
                      <i class="fas fa-check text-silver" title="تم الإرسال"></i>
                    <% } else if (msg.status === 'delivered') { %>
                      <i class="fas fa-check-double text-silver" title="تم التسليم"></i>
                    <% } else if (msg.status === 'read') { %>
                      <i class="fas fa-check-double text-primary" title="تم القراءة"></i>
                    <% } else if (msg.status === 'failed') { %>
                      <i class="fas fa-exclamation-triangle text-danger" title="فشل الإرسال"></i>
                    <% } %>
                  </span>
                <% } %>
              </div>
            </div>
            
            <!-- عرض التفاعلات على الرسالة -->
            <% if (msg.reactions && msg.reactions.length > 0) { %>
              <div class="message-reactions">
                <% msg.reactions.forEach(function(reaction) { %>
                  <span class="reaction-emoji" title="تفاعل من <%= reaction.sender %>">
                    <%= reaction.emoji %>
                  </span>
                <% }); %>
              </div>
            <% } %>
            
            <!-- قائمة خيارات الرسالة -->
            <div class="message-actions">
              <button type="button" class="btn btn-sm text-muted message-action-btn reaction-btn" title="تفاعل" onclick="window.showReactionPicker('<%= msg._id %>', '<%= msg.externalMessageId %>', this)">
                <i class="far fa-smile"></i>
              </button>
              <button type="button" class="btn btn-sm text-muted message-action-btn reply-btn" 
                      data-message-id="<%= msg._id %>" 
                      data-external-id="<%= msg.externalMessageId %>" 
                      title="رد" onclick="window.showReplyForm('<%= msg._id %>', '<%= msg.externalMessageId %>', this.closest('.message'))">
                <i class="fas fa-reply"></i>
              </button>
            </div>
          </div>
          <div class="clear-both"></div>
          
          <% if (index < messages.length - 1 && 
                  new Date(messages[index+1].timestamp) - new Date(msg.timestamp) > 3600000) { %>
            <div class="message-internal-note text-muted my-2" style="font-size: 0.85rem;">
              <i class="fas fa-clock me-1"></i>
              مرت <%= Math.round((new Date(messages[index+1].timestamp) - new Date(msg.timestamp)) / 3600000) %> ساعة
            </div>
          <% } %>
        <% }) %>
      <% } else { %>
        <div class="text-center text-muted py-3">
          <i class="fas fa-comment-dots mb-3" style="font-size: 3rem; opacity: 0.2;"></i>
          <p>لا توجد رسائل في هذه المحادثة.</p>
        </div>
      <% } %>
    </div>
  </div>
  
  <!-- نموذج إرسال الرد (إذا كانت المحادثة غير مغلقة) -->
  <% if (conversation.status !== 'closed') { %>
    <!-- النموذج مع الاعتماد على دالة sendReply المتوفرة من ملف conversation-utils.js -->
    <form id="replyForm" class="mt-3" onsubmit="window.sendReply(event)">
      <input type="hidden" id="conversationId" value="<%= conversation._id %>">
      <div class="mb-3">
        <label for="replyMessage" class="form-label">إرسال رد</label>
        <textarea class="form-control" id="replyMessage" name="content"
                  rows="3" required placeholder="اكتب رسالتك... (Enter للإرسال)" 
                  onkeydown="if(event.key === 'Enter' && !event.shiftKey) { event.preventDefault(); window.sendReply(event); }"></textarea>
      </div>
      <!-- أزرار إرفاق الوسائط -->
      <div class="media-attachments mb-3">
        <div class="btn-group" role="group" aria-label="أزرار إرفاق الوسائط">
          <button type="button" class="btn btn-outline-secondary" id="attachImageBtn" title="إرفاق صورة" onclick="window.showMediaUpload('image')">
            <i class="fas fa-image"></i>
          </button>
          <button type="button" class="btn btn-outline-secondary" id="attachVideoBtn" title="إرفاق فيديو" onclick="window.showMediaUpload('video')">
            <i class="fas fa-video"></i>
          </button>
          <button type="button" class="btn btn-outline-secondary" id="attachDocumentBtn" title="إرفاق مستند" onclick="window.showMediaUpload('document')">
            <i class="fas fa-file-alt"></i>
          </button>
          <button type="button" class="btn btn-outline-secondary" id="attachAudioBtn" title="إرفاق صوت" onclick="window.showMediaUpload('audio')">
            <i class="fas fa-music"></i>
          </button>
          <button type="button" class="btn btn-outline-secondary" id="recordAudioBtn" title="تسجيل صوت" onclick="window.showAudioRecorder()">
            <i class="fas fa-microphone"></i>
          </button>
        </div>
      </div>
      <div class="d-flex justify-content-between align-items-center">
        <span class="sending-indicator" id="sendingIndicator" style="display: none;">
          <i class="fas fa-circle-notch fa-spin"></i> جاري الإرسال...
        </span>
        <button type="button" class="btn btn-outline-secondary" onclick="document.getElementById('replyMessage').value = ''">مسح</button>
        <button type="submit" class="btn btn-primary" id="sendButton">
          <i class="fas fa-paper-plane me-1"></i> إرسال
        </button>
      </div>
    </form>
    
    <!-- نموذج تحميل الوسائط (مخفي) -->
    <div id="mediaUploadModal" class="modal fade" tabindex="-1">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="mediaUploadTitle">تحميل ملف</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
          </div>
          <div class="modal-body">
            <form id="mediaUploadForm" enctype="multipart/form-data">
              <div class="mb-3">
                <label for="mediaFile" class="form-label">اختر ملفاً</label>
                <input type="file" class="form-control" id="mediaFile" name="mediaFile" required>
                <input type="hidden" id="uploadMediaType" name="mediaType" value="image">
                <input type="hidden" id="uploadConversationId" name="conversationId" value="<%= conversation._id %>">
              </div>
              <div class="mb-3">
                <label for="mediaCaption" class="form-label">وصف (اختياري)</label>
                <input type="text" class="form-control" id="mediaCaption" name="caption" placeholder="أضف وصفاً للملف...">
              </div>
            </form>
            <div class="upload-progress mt-3" style="display: none;">
              <div class="progress">
                <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
            <button type="button" class="btn btn-primary" id="uploadMediaBtn" onclick="window.uploadMedia()">تحميل</button>
          </div>
        </div>
      </div>
    </div>
    
    <!-- مودال معاينة الوسائط -->
    <div class="modal fade" id="mediaPreviewModal" tabindex="-1" aria-labelledby="mediaPreviewModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="mediaPreviewModalLabel">معاينة الوسائط</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
          </div>
          <div class="modal-body text-center" id="mediaPreviewContent">
            <!-- سيتم وضع محتوى الوسائط هنا بواسطة JavaScript -->
          </div>
        </div>
      </div>
    </div>
    
    <!-- مودال تسجيل الصوت -->
    <div class="modal fade" id="audioRecorderModal" tabindex="-1" aria-labelledby="audioRecorderModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="audioRecorderModalLabel">تسجيل رسالة صوتية</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
          </div>
          <div class="modal-body">
            <div class="text-center mb-3">
              <div id="audioRecorderControls">
                <button type="button" class="btn btn-primary" id="startRecordingBtn">
                  <i class="fas fa-microphone"></i> بدء التسجيل
                </button>
                <button type="button" class="btn btn-danger d-none" id="stopRecordingBtn">
                  <i class="fas fa-stop"></i> إيقاف التسجيل
                </button>
              </div>
              <div class="mt-3">
                <span id="recordingStatus" class="d-none">جاري التسجيل... <span id="recordingTime">0:00</span></span>
              </div>
            </div>
            
            <div id="audioPreview" class="d-none mt-3">
              <h6>معاينة التسجيل:</h6>
              <audio id="recordedAudio" controls class="w-100"></audio>
              <input type="hidden" id="recordedAudioData">
            </div>
            
            <div class="alert alert-info mt-3">
              <i class="fas fa-info-circle"></i>
              ملاحظة: الحد الأقصى للتسجيل الصوتي هو 2 دقيقة.
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
            <button type="button" class="btn btn-primary d-none" id="sendAudioBtn">إرسال التسجيل</button>
          </div>
        </div>
      </div>
    </div>
  <% } else { %>
    <div class="alert alert-secondary mt-3">
      <i class="fas fa-lock me-1"></i>
      المحادثة مغلقة، لا يمكن الرد.
    </div>
  <% } %>

<script>
  // دالة لفتح معاينة الوسائط (الصور، الفيديو)
  function openMediaPreview(mediaUrl, mediaType) {
    const modal = new bootstrap.Modal(document.getElementById('mediaPreviewModal'));
    const contentContainer = document.getElementById('mediaPreviewContent');
    contentContainer.innerHTML = '';
    
    if (mediaType === 'image') {
      const img = document.createElement('img');
      img.src = mediaUrl;
      img.className = 'img-fluid';
      img.style.maxHeight = '80vh';
      contentContainer.appendChild(img);
    } else if (mediaType === 'video') {
      const video = document.createElement('video');
      video.controls = true;
      video.autoplay = true;
      video.className = 'w-100';
      video.style.maxHeight = '80vh';
      
      const source = document.createElement('source');
      source.src = mediaUrl;
      source.type = 'video/mp4';
      
      video.appendChild(source);
      contentContainer.appendChild(video);
    }
    
    modal.show();
  }
  
  // إعادة تعريف الدالة كمتغير عام للتوافق مع الكود القديم
  window.openMediaPreview = openMediaPreview;
  
  // تسجيل الصوت من المتصفح
  window.showAudioRecorder = function() {
    // عرض مودال تسجيل الصوت
    const modal = new bootstrap.Modal(document.getElementById('audioRecorderModal'));
    modal.show();
    
    // الحصول على عناصر التحكم
    const startBtn = document.getElementById('startRecordingBtn');
    const stopBtn = document.getElementById('stopRecordingBtn');
    const statusText = document.getElementById('recordingStatus');
    const timeDisplay = document.getElementById('recordingTime');
    const audioPreview = document.getElementById('audioPreview');
    const audioPlayer = document.getElementById('recordedAudio');
    const sendBtn = document.getElementById('sendAudioBtn');
    const audioDataInput = document.getElementById('recordedAudioData');
    
    // متغيرات التسجيل
    let mediaRecorder;
    let audioChunks = [];
    let startTime;
    let timerInterval;
    let audioBlob;
    let audioUrl;
    
    // إعادة تعيين حالة التسجيل
    const resetRecorderState = () => {
      startBtn.classList.remove('d-none');
      stopBtn.classList.add('d-none');
      statusText.classList.add('d-none');
      timeDisplay.textContent = '0:00';
      audioPreview.classList.add('d-none');
      sendBtn.classList.add('d-none');
      audioChunks = [];
      if (audioUrl) {
        URL.revokeObjectURL(audioUrl);
      }
    };
    
    // إضافة التسجيل الصوتي
    const addAudioAttachment = (audioData) => {
      // إرسال البيانات إلى الخادم لتخزينها
      const conversationId = document.getElementById('conversationId').value;
      
      fetch('/whatsapp/media/upload', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          conversationId: conversationId,
          mediaType: 'audio',
          base64Data: audioData,
          fileName: 'audio_recording.ogg'
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // إضافة الوسائط إلى الرسالة
          document.getElementById('mediaId').value = data.media._id;
          document.getElementById('mediaType').value = 'audio';
          document.getElementById('mediaFileName').textContent = 'تسجيل صوتي';
          document.getElementById('mediaPreview').style.display = 'block';
          
          // إغلاق المودال
          const modalElement = document.getElementById('audioRecorderModal');
          const modalInstance = bootstrap.Modal.getInstance(modalElement);
          modalInstance.hide();
        } else {
          alert('حدث خطأ أثناء رفع التسجيل الصوتي');
        }
      })
      .catch(error => {
        console.error('خطأ في رفع التسجيل الصوتي:', error);
        alert('حدث خطأ أثناء رفع التسجيل الصوتي');
      });
    };
    
    // تحديث عداد الوقت
    const updateTimer = () => {
      const elapsed = Math.floor((Date.now() - startTime) / 1000);
      const minutes = Math.floor(elapsed / 60);
      const seconds = elapsed % 60;
      timeDisplay.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
      
      // إيقاف التسجيل بعد دقيقتين (الحد الأقصى)
      if (elapsed >= 120) {
        stopRecording();
      }
    };
    
    // بدء التسجيل
    const startRecording = async () => {
      try {
        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
        
        // إعداد مسجل الوسائط
        mediaRecorder = new MediaRecorder(stream, { mimeType: 'audio/webm' });
        
        // استقبال بيانات التسجيل
        mediaRecorder.ondataavailable = (event) => {
          if (event.data.size > 0) {
            audioChunks.push(event.data);
          }
        };
        
        // عند انتهاء التسجيل
        mediaRecorder.onstop = () => {
          // إيقاف عداد الوقت
          clearInterval(timerInterval);
          
          // إيقاف تدفق الصوت
          stream.getTracks().forEach(track => track.stop());
          
          // إنشاء ملف صوتي من البيانات المسجلة
          audioBlob = new Blob(audioChunks, { type: 'audio/webm' });
          audioUrl = URL.createObjectURL(audioBlob);
          
          // عرض معاينة التسجيل
          audioPlayer.src = audioUrl;
          audioPreview.classList.remove('d-none');
          
          // تمكين زر الإرسال
          sendBtn.classList.remove('d-none');
          
          // تحويل الملف إلى base64 لإرساله
          const reader = new FileReader();
          reader.readAsDataURL(audioBlob);
          reader.onloadend = function() {
            const base64data = reader.result;
            audioDataInput.value = base64data;
          };
        };
        
        // بدء التسجيل
        mediaRecorder.start();
        startTime = Date.now();
        timerInterval = setInterval(updateTimer, 1000);
        
        // تحديث واجهة المستخدم
        startBtn.classList.add('d-none');
        stopBtn.classList.remove('d-none');
        statusText.classList.remove('d-none');
        audioPreview.classList.add('d-none');
        
      } catch (error) {
        console.error('خطأ في بدء التسجيل الصوتي:', error);
        alert('لا يمكن الوصول إلى الميكروفون. يرجى التحقق من إذن الميكروفون في المتصفح.');
      }
    };
    
    // إيقاف التسجيل
    const stopRecording = () => {
      if (mediaRecorder && mediaRecorder.state !== 'inactive') {
        mediaRecorder.stop();
        stopBtn.classList.add('d-none');
        startBtn.classList.remove('d-none');
        statusText.classList.add('d-none');
      }
    };
    
    // تعيين مستمعي الأحداث
    startBtn.addEventListener('click', startRecording);
    stopBtn.addEventListener('click', stopRecording);
    
    // زر إرسال التسجيل
    sendBtn.addEventListener('click', function() {
      const audioData = audioDataInput.value;
      if (audioData) {
        addAudioAttachment(audioData);
      } else {
        alert('خطأ: لا توجد بيانات صوتية');
      }
    });
    
    // إعادة تعيين الحالة عند إغلاق المودال
    document.getElementById('audioRecorderModal').addEventListener('hidden.bs.modal', resetRecorderState);
  };
</script>